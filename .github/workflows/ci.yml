name: CI

on:
  pull_request:
  push:
    branches:
      - development

env:
  RUSTFLAGS: "" # -Dwarnings
  RUST_BACKTRACE: full
  rust_min: 1.65.0

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo fmt --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - if: ${{ runner.os == 'Linux' }}
        run: sudo apt update && sudo apt install -y libclang-dev libgssapi-krb5-2 libkrb5-dev
      - run: cargo clippy --all-features --all-targets --tests -- -Dwarnings

  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - run: cargo install cargo-hack
      - if: ${{ runner.os == 'Linux' }}
        run: sudo apt update && sudo apt install -y libclang-dev libgssapi-krb5-2 libkrb5-dev
      - run: cargo hack check --each-feature --features=std --skip=testutils

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        rust: [ beta, stable ]
        include:
          - rust: nightly
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{matrix.rust}}
      - if: ${{ runner.os == 'Linux' }}
        run: sudo apt update && sudo apt install -y libclang-dev libgssapi-krb5-2 libkrb5-dev
      - run: cargo test --all

  miri:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@miri
      - if: ${{ runner.os == 'Linux' }}
        run: sudo apt update && sudo apt install -y libclang-dev libgssapi-krb5-2 libkrb5-dev
      - run: cargo miri test --all --all-features
        env:
          MIRIFLAGS: -Zmiri-strict-provenance

  msrv:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.rust_min }}
          components: rust-src
      - if: ${{ runner.os == 'Linux' }}
        run: sudo apt update && sudo apt install -y libclang-dev libgssapi-krb5-2 libkrb5-dev
      - run: cargo check --all-features

  minimal-versions:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.rust_min }}
      - if: ${{ runner.os == 'Linux' }}
        run: sudo apt update && sudo apt install -y libclang-dev libgssapi-krb5-2 libkrb5-dev
      - run: |
          cargo +nightly update -Z minimal-versions
          cargo +${{ env.rust_min }} check --workspace --all-targets --all-features
          cargo +${{ env.rust_min }} test --workspace --all-targets --all-features
        env:
          RUSTFLAGS: -Dwarnings
